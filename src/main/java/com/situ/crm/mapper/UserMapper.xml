<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.situ.crm.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.situ.crm.bean.User">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="true_name" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		id, name, password, true_name, email, phone, role_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="doDelete">
		delete from user
		<where>
			id in
			<foreach collection="array" item="id" open="(" close=")"
				separator=",">
				#{id}
			</foreach>
		</where>
	</delete>

	<insert id="insert" parameterType="com.situ.crm.bean.User">
		insert into user (id, name,
		password,
		true_name, email, phone,
		role_name)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{trueName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{roleName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.situ.crm.bean.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="trueName != null">
				true_name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="trueName != null">
				#{trueName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.situ.crm.bean.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="trueName != null">
				true_name = #{trueName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.situ.crm.bean.User">
		update user
		set
		name = #{name,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		true_name = #{trueName,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		role_name = #{roleName,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="pageList" resultMap="BaseResultMap" parameterType="salechance">
		select
		<include refid="Base_Column_List" />
		from user
		<where>
			<if test="s_name!=null and s_name!=''"><!-- sc_name前段传过来的属性值 -->
				and name like concat('%',#{s_name},'%')
			</if>
			<if test="s_truename!=null and s_truename!='' "><!-- sc_name前段传过来的属性值 -->
				and true_name like concat('%',#{s_truename},'%')
			</if>
			<if test="s_email!=null and s_email!=''"><!-- sc_name前段传过来的属性值 -->
				and email like concat('%',#{s_email},'%')
			</if>
			<if test="s_phone!=null and s_phone!='' "><!-- sc_name前段传过来的属性值 -->
				and phone like concat('%',#{s_phone},'%')
			</if>
			<if test="s_rolename!=null and s_rolename!='' "><!-- sc_name前段传过来的属性值 -->
				and role_name like concat('%',#{s_rolename},'%')
			</if>
		</where>
	</select>

	<select id="selectAssignMan" resultType="string">
		select true_name
		from
		user
		where role_name="客户经理"
	</select>
	<select id="selectUserExist" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where name=#{name}
		and password=#{password}
	</select>

</mapper>